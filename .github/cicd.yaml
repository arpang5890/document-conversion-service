name: Build, Test and Deploy Service to EKS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Step 3: Build the application using Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Step 4: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 5: Create ECR repository if it doesn't exist
      - name: Create ECR repository if not exists
        run: |
          ECR_REPO_NAME=document-service
          aws ecr describe-repositories --repository-names $ECR_REPO_NAME || \
          aws ecr create-repository --repository-name $ECR_REPO_NAME

      # Step 6: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Step 7: Build the Docker image
      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          IMAGE_NAME=document-service-app
          ECR_REGISTRY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker build -t $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG .

      # Step 8: Push the Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          IMAGE_TAG=${{ github.sha }}
          IMAGE_NAME=document-service-app
          ECR_REGISTRY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker push $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG

      # Step 9: Update the Kubernetes deployment YAML to use the new image
      - name: Update deployment image in Kubernetes YAML
        run: |
          IMAGE_TAG=${{ github.sha }}
          IMAGE_NAME=document-service-app
          ECR_REGISTRY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          sed -i "s|<IMAGE_PLACEHOLDER>|$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG|g" k8s/deployment.yaml

      # Step 10: Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # Step 11: Update kubeconfig for EKS
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name my-eks-cluster  # Replace with your EKS cluster name

      # Step 12: Deploy to EKS using kubectl
      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      # Step 13: Verify deployment status
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment document-service-app